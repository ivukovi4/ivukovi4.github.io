{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/components/footer.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","NotFoundPage","a","createElement","defaultNavbarColor","style","marginTop","title","SEO","_ref","_ref$description","description","_ref$lang","lang","_ref$meta","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","link","href","rel","name","content","property","author","concat","Footer","react_default","className","Container","Row","Date","getFullYear","Header","_ref$siteTitle","siteTitle","_ref$defaultNavbarCol","_479193092","_React$useState","React","useState","navbarColor","setNavbarColor","_React$useState2","navbarCollapse","setNavbarCollapse","useEffect","updateNavbarColor","document","documentElement","scrollTop","body","window","addEventListener","removeEventListener","Navbar","classnames","expand","NavbarBrand","data-placement","src","logo","childImageSharp","original","width","height","margin","alt","aria-expanded","toggled","onClick","classList","toggle","Collapse","navbar","isOpen","Nav","NavItem","modules","activeClass","smooth","spy","to","NavLink","target","Layout","children","_856328897","Fragment","header","footer"],"mappings":"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","file":"component---src-pages-404-tsx-6a4989f57311aa53fd3f.js","sourcesContent":["import React, { FC } from \"react\"\r\n\r\nimport { Container } from \"reactstrap\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage: FC = () => (\r\n  <Layout defaultNavbarColor={\"\"}>\r\n    <Container style={{ marginTop: \"100px\" }}>\r\n      <SEO title=\"404: Страница не найдена\" />\r\n      <h1>СТРАНИЦА НЕ НАЙДЕНА</h1>\r\n      <p>Вы перешли по url который не существует.. печалька.</p>\r\n    </Container>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport React, { FC } from \"react\"\r\nimport Helmet from \"react-helmet\"\r\n\r\ninterface SEOProps {\r\n  description?: string\r\n  lang?: string\r\n  meta?: any[]\r\n  title?: string\r\n}\r\n\r\nconst SEO: FC<SEOProps> = ({\r\n  description = ``,\r\n  lang = `en`,\r\n  meta = [],\r\n  title,\r\n}) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title || site.siteMetadata.title}\r\n      titleTemplate={title ? `%s | ${site.siteMetadata.title}` : null}\r\n      link={[\r\n        {\r\n          href:\r\n            \"https://fonts.googleapis.com/css?family=Montserrat:400,700,200\",\r\n          rel: \"stylesheet\",\r\n        },\r\n        {\r\n          href:\r\n            \"https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css\",\r\n          rel: \"stylesheet\",\r\n        },\r\n      ]}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SEO\r\n","import React, { FC } from \"react\"\r\nimport { Container, Row } from \"reactstrap\"\r\n\r\nconst Footer: FC = () => (\r\n  <footer className=\"footer footer-black footer-white\">\r\n    <Container>\r\n      <Row>\r\n        <div className=\"credits ml-auto\">\r\n          <span className=\"copyright\">\r\n            © {new Date().getFullYear()}, Безупречный код\r\n          </span>\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n  </footer>\r\n)\r\n\r\nexport default Footer\r\n","import React, { FC } from \"react\"\r\n\r\nimport classnames from \"classnames\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { Link } from \"react-scroll\"\r\nimport {\r\n  Collapse,\r\n  Container,\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\"\r\n\r\ninterface HeaderProps {\r\n  siteTitle?: string\r\n  defaultNavbarColor?: string\r\n}\r\n\r\nconst Header: FC<HeaderProps> = ({\r\n  siteTitle = ``,\r\n  defaultNavbarColor = \"navbar-transparent\",\r\n}) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      logo: file(relativePath: { eq: \"logo.png\" }) {\r\n        childImageSharp {\r\n          original {\r\n            src\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const [navbarColor, setNavbarColor] = React.useState(defaultNavbarColor)\r\n  const [navbarCollapse, setNavbarCollapse] = React.useState(false)\r\n\r\n  const toggleNavbarCollapse = () => {\r\n    setNavbarCollapse(!navbarCollapse)\r\n    document.documentElement.classList.toggle(\"nav-open\")\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const updateNavbarColor = () => {\r\n      if (\r\n        document.documentElement.scrollTop > 299 ||\r\n        document.body.scrollTop > 299\r\n      ) {\r\n        setNavbarColor(\"\")\r\n      } else if (\r\n        document.documentElement.scrollTop < 300 ||\r\n        document.body.scrollTop < 300\r\n      ) {\r\n        setNavbarColor(defaultNavbarColor)\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", updateNavbarColor)\r\n\r\n    return function cleanup() {\r\n      window.removeEventListener(\"scroll\", updateNavbarColor)\r\n    }\r\n  }, [defaultNavbarColor, setNavbarColor])\r\n\r\n  return (\r\n    <Navbar className={classnames(\"fixed-top\", navbarColor)} expand=\"lg\">\r\n      <Container>\r\n        <div className=\"navbar-translate\">\r\n          <NavbarBrand data-placement=\"bottom\" href=\"/\">\r\n            <img\r\n              src={data.logo.childImageSharp.original.src}\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n              style={{ margin: \"-5px 12px -5px 0\" }}\r\n              alt=\"\"\r\n            />\r\n            {siteTitle}\r\n          </NavbarBrand>\r\n          <button\r\n            aria-expanded={navbarCollapse}\r\n            className={classnames(\"navbar-toggler navbar-toggler\", {\r\n              toggled: navbarCollapse,\r\n            })}\r\n            onClick={toggleNavbarCollapse}\r\n          >\r\n            <span className=\"navbar-toggler-bar bar1\" />\r\n            <span className=\"navbar-toggler-bar bar2\" />\r\n            <span className=\"navbar-toggler-bar bar3\" />\r\n          </button>\r\n        </div>\r\n        <Collapse\r\n          className=\"justify-content-end\"\r\n          navbar={true}\r\n          isOpen={navbarCollapse}\r\n        >\r\n          <Nav navbar={true}>\r\n            <NavItem>\r\n              <Link\r\n                activeClass=\"active\"\r\n                className=\"nav-link\"\r\n                href=\"#contacts\"\r\n                smooth={true}\r\n                spy={true}\r\n                to=\"contacts\"\r\n              >\r\n                <i className=\"fa fa-address-card\" /> Контакты\r\n              </Link>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                data-placement=\"bottom\"\r\n                href=\"https://github.com/flawlesscodeteam\"\r\n                target=\"_blank\"\r\n                title=\"GitHub Team\"\r\n              >\r\n                <i className=\"fa fa-github\" />\r\n                <p className=\"d-lg-none\">GitHub</p>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport React, { FC } from \"react\"\r\n\r\nimport Footer from \"./footer\"\r\nimport Header from \"./header\"\r\n\r\nimport \"../assets/css/bootstrap.min.css\"\r\nimport \"../assets/demo/demo.css\"\r\nimport \"../assets/scss/paper-kit.scss\"\r\n\r\ninterface LayoutProps {\r\n  defaultNavbarColor?: string\r\n}\r\n\r\nconst Layout: FC<LayoutProps> = ({ defaultNavbarColor, children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        defaultNavbarColor={defaultNavbarColor}\r\n        siteTitle={data.site.siteMetadata.title}\r\n      />\r\n      <div className=\"main\">\r\n        {children}\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}